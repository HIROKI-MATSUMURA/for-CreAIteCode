@use "sass:math";
@use "sass:meta";
@use "sass:string";
// グローバル関数
// バージョン: 1.0.0

// 数値のみを取り出す
// 参照：https://css-tricks.com/snippets/sass/strip-unit-function/
@function strip-unit($number) {
  @if meta.type-of($number) == "number" and not math.is-unitless($number) {
    // remの場合はpxに変換してから単位を取り除く
    @if string.index(inspect($number), "rem") {
      $px-value: $number * 16;
      @return math.div($px-value, $px-value * 0 + 1);
    }
    @return math.div($number, $number * 0 + 1);
  }
  @return $number;
}

@function vw($window_width, $size) {
  @return math.div($size, $window_width) * 100vw;
}

// remへの計算式（16pxを基準としている。10pxを基準とする場合は16を10に変更する）
@function rem($pixels) {
  @return math.div($pixels, 16) * 1rem;
}



// カラーを明るくする（白を混ぜる）
@function lighten-color($color, $percent) {
  @return mix(white, $color, $percent);
}

// カラーを暗くする（黒を混ぜる）
@function darken-color($color, $percent) {
  @return mix(black, $color, $percent);
}

// マップから値を取得する
@function map-get-deep($map, $keys...) {
  @each $key in $keys {
    $map: map-get($map, $key);
  }
  @return $map;
}

// ブレイクポイントの値を取得
@function breakpoint($name) {
  @return map-get($breakpoints, $name);
}

// z-indexの値を取得
@function z-index($key) {
  @return map-get($z-indexes, $key);
}

// スペーサーの値を取得
@function spacer($key) {
  @return map-get($spacers, $key);
}


// カラーを明るくする（白を混ぜる）
@function lighten-color($color, $percent) {
  @return mix(white, $color, $percent);
}

// カラーを暗くする（黒を混ぜる）
@function darken-color($color, $percent) {
  @return mix(black, $color, $percent);
}

// マップから値を取得する
@function map-get-deep($map, $keys...) {
  @each $key in $keys {
    $map: map-get($map, $key);
  }
  @return $map;
}

// ブレイクポイントの値を取得
@function breakpoint($name) {
  @return map-get($breakpoints, $name);
}

// z-indexの値を取得
@function z-index($key) {
  @return map-get($z-indexes, $key);
}

// スペーサーの値を取得
@function spacer($key) {
  @return map-get($spacers, $key);
}
